1. Swap two numbers using pointers.
2. Find sum of array elements using pointers.
3. Reverse an array using pointers.
4. Find length of a string using pointers.
5. Reverse a string using pointers.
6. Copy one string to another using pointers.
7. Concatenate two strings using pointers.
8. Compare two strings using pointers.
9. Find the maximum element in an array using pointers.
10. Find the minimum element in an array using pointers.
11. Count vowels and consonants in a string using pointers.
12. Count digits in a string using pointers.
13. Count spaces in a string using pointers.
14. Count special characters in a string using pointers.
15. Find sum and average of array elements using functions and pointers.
16. Search an element in an array using pointers.
17. Implement bubble sort using pointers.
18. Implement selection sort using pointers.
19. Implement insertion sort using pointers.
20. Implement binary search using pointers.
21. Find the second largest element in an array using pointers.
22. Find the second smallest element in an array using pointers.
23. Reverse words in a string using pointers.
24. Find the longest word in a string using pointers.
25. Find the shortest word in a string using pointers.
26. Remove spaces from a string using pointers.
27. Remove vowels from a string using pointers.
28. Replace all spaces in a string with underscores using pointers.
29. Replace all digits in a string with ‘*’ using pointers.
30. Replace all uppercase letters with lowercase using pointers.
31. Replace all lowercase letters with uppercase using pointers.
32. Merge two sorted arrays using pointers.
33. Find the intersection of two arrays using pointers.
34. Find the union of two arrays using pointers.
35. Remove duplicates from an array using pointers.
36. Reverse a linked list (single) using iterative method.
37. Reverse a linked list (single) using recursion.
38. Count the number of nodes in a linked list.
39. Search an element in a linked list.
40. Insert a node at the beginning of a linked list.
41. Insert a node at the end of a linked list.
42. Insert a node at a given position in a linked list.
43. Delete a node from the beginning of a linked list.
44. Delete a node from the end of a linked list.
45. Delete a node from a given position in a linked list.
46. Find the middle element of a linked list.
47. Detect a loop in a linked list.
48. Remove a loop from a linked list.
49. Count the frequency of each element in a linked list.
50. Sort a linked list.
51. Merge two linked lists.
52. Find the intersection point of two linked lists.
53. Implement stack using array.
54. Implement stack using linked list.
55. Implement queue using array.
56. Implement queue using linked list.
57. Implement circular queue using array.
58. Implement dequeue using array.
59. Implement dequeue using linked list.
60. Convert infix expression to postfix using stack.